TebLocalPlannerROS:

    # robot
    max_vel_x: 0.25
    max_vel_theta: 0.25
    max_vel_x_backwards: 0.1
    acc_lim_x: 0.2  #max_vel_theta (double, default: 0.3)
    acc_lim_theta: 0.18 #acc_lim_theta (double, default: 0.5)
 
    teb_autosize: True
    dt_ref: 0.3 #期望的轨迹时间分辨率
    dt_hysteresis: 0.1 #根据当前时间分辨率自动调整大小的滞后现象，通常约为。建议使用dt ref的10%
    global_plan_overwrite_orientation: true  #覆盖由全局规划器提供的局部子目标的方向
    via_points_ordered: false #
 
    allow_init_with_backwards_motion: true
    max_global_lan_lookahead_dist: 3.0 #指定考虑优化的全局计划子集的最大长度
    feasibility_check_no_poses: 5 #每个采样间隔的姿态可行性分析数，default：4
 
    global_plan_viapoint_sep: 2.0
 
    cmd_angle_instead_rotvel: false  # cmd_angle_instead_rotvel(bool,defaule:false) 是否允许原地转
    wheelbase: 0.0 #wheelbase (double, default: 1.0)  diff-drive: 0.0
 
    footprint_model:
        type: "polygon"
        #type: "point"
        # line_start: [0.035, 0]
        # line_end: [-0.275, 0]
        vertices: [[0.283, -0.25], [0.283,0.25], [-0.283, 0.25], [-0.283,-0.25]]
    # goal
    xy_goal_tolerance: 0.1  #目标位置的允许距离误差
    yaw_goal_tolerance: 0.15 #目标位置的允许角度误差
    free_goal_vel: False #去除目标速度的约束

    # Obstacles
    min_obstacle_dist: 0.01 # 与障碍的最小期望距离,注意，teb_local_planner本身不考虑膨胀半径
    include_costmap_obstacles: true #应否考虑到局部costmap的障碍
    costmap_obstacles_behind_robot_dist: 1.0 #考虑后面n米内的障碍物
    obstacle_poses_affected: 30 #为了保持距离，每个障碍物位置都与轨道上最近的位置相连。
    inflation_dist: 0.015 #(double, default: 0.6)  障碍物周围缓冲区(应大于min_obstacle_dist才能生效)
    #legacy_obstacle_association (bool, default: false) 切换到旧的的策略
    #obstacle_association_force_inclusion_factor (double, default: 1.5)  n * min_obstacle_dist的半径范围内强制考虑障碍
    #obstacle_association_cutoff_factor (double, default: 5) 只有在参数legacy为false时才使用此2参数
    #定义插件名称，用于将costmap的单元格转换成点/线/多边形。若设置为空字符，则视为禁用转换，将所有点视为点障碍
    costmap_converter_plugin: "costmap_converter::CostmapToPolygonsDBSMCCH"
    #costmap_converter_plugin: "costmap_converter::CostmapToPolygonsDBSConcaveHull"
    #costmap_converter_plugin: "costmap_converter::CostmapToLinesDBSRANSAC"
    #costmap_converter_plugin: "costmap_converter::CostmapToLinesDBSMCCH"
    costmap_converter_spin_thread: True  #如果为true，则costmap转换器将以不同的线程调用其回调队列, default:true
    costmap_converter_rate: 5 #定义costmap_converter插件处理当前costmap的频率（该值不高于costmap更新率
    costmap_converter/CostmapToLinesDBSRANSAC:
        cluster_max_distance: 0.4
        cluster_min_pts: 2
        ransac_inlier_distance: 0.15
        ransac_min_inlier: 10
        ransac_no_iterations: 2000
        ransac_remaining_outliers: 3
        ransac_convert_outlier_pts: True
        ransac_filter_remaining_outlier_pts: False
        convex_hull_min_pt_separation: 0.1


    # Optimization
    no_inner_iterations: 4 #在每个外循环迭代中调用的实际求解器迭代次数
    no_outer_iterations: 3 #在每个外循环迭代中调用的实际求解器迭代次数
    optimization_activate: True
    optimization_verbose: False
    penalty_epsilon: 0.09 #为硬约束近似的惩罚函数添加一个小的安全范围,can change
    weight_max_vel_x: 2  #满足最大允许平移速度的优化权重
    weight_max_vel_y: 2  #
    weight_max_vel_theta: 4 #满足最大允许平移速度的优化权重
    weight_acc_lim_x: 1 #满足最大允许平移加速度的优化权重。
    weight_acc_lim_y: 1 #
    weight_acc_lim_theta: 2 #满足最大允许角加速度的优化权重。
    weight_kinematics_nh: 1000 #运动学的优化权重
    weight_kinematics_forward_drive: 1000 #强制机器人仅选择正向（正的平移速度）的优化权重。
    weight_kinematics_turning_radius: 1 #采用最小转向半径的优化权重
    weight_optimaltime: 1.0  #根据转换/执行时间对轨迹进行收缩的优化权重。
    obstacle_cost_exponent: 1.0   #distance to ob,nearer if vaule is bigger 
    weight_obstacle: 500 #保持与障碍物的最小距离的优化权重 default: 50.0, the higher and the slower
    weight_viapoint: 150 #跟踪全据路径的权重
    weight_inflation: 1.0 #(double, default: 0.1)  #膨胀半径权重
    weight_dynamic_obstacle: 10 # not in use yet
    # weight_adapt_factor: 2 #迭代地增加某些权重
    
    alternative_time_cost: False

    # Homotopy Class Planner
   
    enable_homotopy_class_planning: true #激活并行规划（因为一次优化多个轨迹，占用更多的CPU资源
    enable_multithreading: True #激活多个线程，以便在不同的线程中规划每个轨迹
    simple_exploration: False
    max_number_classes: 1 #考虑到的不同轨迹的最大数量
   
    #selection_cost_hysteresis: 1.0 #轨迹成本
    #selection_obst_cost_scale: 1.0 #障碍物成本
    #selection_alternative_time_cost: False #如果为真，时间成本(时间差平方和)被总转移时间(时间差和)所替代。
   
    roadmap_graph_no_samples: 13 #指定为创建路线图而生成的样本数
    roadmap_graph_area_width: 3 #指定该区域的宽度
    h_signature_prescaler: 0.5 #（0.2 < value <= 1）缩放用于区分同伦类的内部参数（H-signature）。
    # 警告：只能减少此参数，如果在局部costmap中遇到太多障碍物的情况，请勿选择极低值，否则无法将障碍物彼此区分开线缩放用于区分同伦类的内部参数（H-signature）。
    h_signature_threshold: 0.1  #如果实部和复部的差都低于规定的阈值，则假定两个h签名相等。
    obstacle_keypoint_offset: 0.1
    obstacle_heading_threshold: 0.45 #指定障碍标头和目标标头之间的标量积的值，以便将(障碍)考虑到勘探中
    visualize_hc_graph: false #可视化创建的图形，用于探索不同的轨迹（在rviz中检查标记消息）
    # viapoints_all_candidates (bool, default: true) 如果为真，则不同拓扑的所有轨迹都附加到这组vio -points上，否则只有共享与初始/全局计划相同拓扑的轨迹与它们连接

